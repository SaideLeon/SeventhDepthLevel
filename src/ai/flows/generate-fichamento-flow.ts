
'use server';
/**
 * @fileOverview Generates a reading summary (ficha de leitura) from scraped web content.
 *
 * - generateFichamento - A function that initiates the fichamento generation process.
 * - GenerateFichamentoInput - The input type for the generateFichamento function.
 * - GenerateFichamentoOutput (FichaLeitura) - The return type for the generateFichamento function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Based on PageContent from raspagem.ts and FichaLeitura from user's example
const ScrapedContentSchema = z.object({
  url: z.string().describe("The URL of the scraped page."),
  titulo: z.string().describe("The title of the scraped page."),
  conteudo: z.string().describe("The main text content scraped from the page."),
  autor: z.string().optional().describe("The author of the content, if available."),
  dataPublicacao: z.string().optional().describe("Publication date, if available."),
  // imagens: z.array(z.object({ src: z.string(), legenda: z.string() })).optional().describe("Images found on the page.")
  // citacao: z.string().optional().describe("A pre-selected citation, if any.") // This might be generated by this flow instead
});
export type GenerateFichamentoInput = z.infer<typeof ScrapedContentSchema>;

export const FichaLeituraSchema = z.object({
  url: z.string().describe("URL of the source material."),
  titulo: z.string().describe("Title of the source material."),
  autor: z.string().optional().describe("Author(s) of the source material."),
  anoPublicacao: z.string().optional().describe("Year of publication."),
  palavrasChave: z.array(z.string()).describe("A list of 3-5 main keywords summarizing the content."),
  resumo: z.string().describe("A concise summary of the content (around 150-250 words), highlighting key arguments, concepts, and conclusions."),
  citacoesRelevantes: z.array(z.string()).describe("One or two direct short quotes that are particularly relevant or impactful."),
  comentariosAdicionais: z.string().optional().describe("Brief personal notes or connections to the main theme of study (optional).")
});
export type FichaLeitura = z.infer<typeof FichaLeituraSchema>;

export async function generateFichamento(input: GenerateFichamentoInput): Promise<FichaLeitura> {
  return generateFichamentoFlow(input);
}

const fichamentoPrompt = ai.definePrompt({
  name: 'generateFichamentoPrompt',
  input: {schema: ScrapedContentSchema},
  output: {schema: FichaLeituraSchema},
  prompt: `Você é um assistente de IA especialista em criar fichas de leitura detalhadas e informativas a partir de conteúdo web.
Analise o seguinte conteúdo raspado de uma página da web:

URL: {{{url}}}
Título Original: {{{titulo}}}
Autor Original: {{#if autor}}{{{autor}}}{{else}}Não informado{{/if}}
Data de Publicação Original: {{#if dataPublicacao}}{{{dataPublicacao}}}{{else}}Não informada{{/if}}

Conteúdo Principal:
{{{conteudo}}}

---

Sua tarefa é gerar uma "Ficha de Leitura" estruturada com os seguintes campos:
- url: A URL original do material.
- titulo: O título original do material.
- autor: O autor original, se disponível.
- anoPublicacao: O ano de publicação. Se a data completa for fornecida, extraia apenas o ano. Se não houver data, deixe em branco ou use "s.d." (sem data).
- palavrasChave: Uma lista de 3 a 5 palavras-chave principais que resumem o conteúdo.
- resumo: Um resumo conciso do conteúdo (cerca de 150-250 palavras), destacando os principais argumentos, conceitos e conclusões relevantes para pesquisa acadêmica.
- citacoesRelevantes: Uma ou duas citações diretas e curtas do texto que sejam particularmente relevantes ou impactantes.
- comentariosAdicionais: (Opcional) Breves notas pessoais ou conexões com um tema principal de estudo. Se não tiver comentários, pode deixar em branco.

Seja objetivo e foque nos aspectos acadêmicos do texto.
Priorize informações factuais e argumentos centrais.
Certifique-se de que o resumo e as citações sejam extraídos fielmente do conteúdo fornecido.
O ano de publicação deve ser apenas o ano.
As palavras-chave devem ser concisas.
As citações relevantes devem ser curtas e impactantes.
`,
});

const generateFichamentoFlow = ai.defineFlow(
  {
    name: 'generateFichamentoFlow',
    inputSchema: ScrapedContentSchema,
    outputSchema: FichaLeituraSchema,
  },
  async (input) => {
    const {output} = await fichamentoPrompt(input);
    if (!output) {
      throw new Error('AI model did not produce the expected FichaLeitura output structure.');
    }
    // Ensure 'N/A' or similar if optional fields are empty strings from AI
    return {
      ...output,
      autor: output.autor || undefined,
      anoPublicacao: output.anoPublicacao || undefined,
      comentariosAdicionais: output.comentariosAdicionais || undefined,
    };
  }
);
    